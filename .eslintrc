{
  "extends": ["airbnb-typescript", "next/core-web-vitals", "prettier"],
  "plugins": ["@typescript-eslint", "unused-imports", "simple-import-sort"],
  "rules": {
    "import/extensions": "off",
    "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
    "jsx-a11y/anchor-is-valid": "off", // Next.js use his own internal link system
    "react/require-default-props": "off", // Allow non-defined react props as undefined
    "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
    "@next/next/no-img-element": "off", // We currently not using next/image because it isn't supported with SSG mode
    "import/prefer-default-export": "off", // Named export is easier to refactor automatically
    "class-methods-use-this": "off", // _document.tsx use render method without `this` keyword
    "react-hooks/exhaustive-deps": "off", // Incorrectly report needed dependency with Next.js router
    "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
    "@typescript-eslint/no-unused-vars": "off",
    "unused-imports/no-unused-imports": "warn",
    "unused-imports/no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }],
    "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
    "@next/next/no-html-link-for-pages": "off",
    "simple-import-sort/imports": [
      "warn",
      {
        "groups": [
          // ext library & side effect imports
          ["^@?\\w", "^\\u0000"],
          // {s}css files
          ["^.+\\.s?css$"],
          // Lib and hooks
          ["^@/lib", "^@/hooks"],
          // static data
          ["^@/data"],
          // components
          ["^@/components", "^@/container"],
          // zustand store
          ["^@/store"],
          // Other imports
          ["^@/"],
          // relative paths up until 3 level
          [
            "^\\./?$",
            "^\\.(?!/?$)",
            "^\\.\\./?$",
            "^\\.\\.(?!/?$)",
            "^\\.\\./\\.\\./?$",
            "^\\.\\./\\.\\.(?!/?$)",
            "^\\.\\./\\.\\./\\.\\./?$",
            "^\\.\\./\\.\\./\\.\\.(?!/?$)"
          ],
          ["^@/types"],
          // other that didnt fit in
          ["^"]
        ]
      }
    ]
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json"
  }
}
